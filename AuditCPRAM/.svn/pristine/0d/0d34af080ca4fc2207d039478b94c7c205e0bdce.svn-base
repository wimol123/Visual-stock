const supplierGroup = ["3", "8"];
const purchasingGroup = "5";
var isSupplier = false;
var titleText;
var day = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]
var month = ['ม.ค','ก.พ','มี.ค','เม.ย','พ.ค','มิ.ย','ก.ค','ส.ค','ก.ย','ต.ค','พ.ย','ธ.ค']
var option;
var count;

var periodOfTime;
$('#graph_x').on('click', function() {
	if ($('#graph_x').val().trim() === 'day'){
		periodOfTime = day;
		createChart(titleText, periodOfTime, data);
	
	
    }
    else if ($('#graph_x').val().trim() === 'month') {
		periodOfTime = month;
		createChart(titleText, periodOfTime, data);
    }
	
});


$('#graph_y').on('click', function() {
	if ($('#graph_y').val().trim() === 'supplier'){
	titleText = 'supplier';	
	document.querySelector('.form-group-material').classList.add('hide');
	if (document.querySelector('.form-group-supplier.hide') != null) {
		document.querySelector('.form-group-supplier.hide').classList.remove('hide');
		
	}
		
	createChart(titleText, periodOfTime, data);
	
    }
    else if($('#graph_y').val().trim() === 'material') {
	titleText = 'material';
	document.querySelector('.form-group-supplier').classList.add('hide');
	if (document.querySelector('.form-group-material.hide') != null) {
		document.querySelector('.form-group-material.hide').classList.remove('hide');
		
	}
	createChart(titleText, periodOfTime, data);
    }
});
var data = [
	{
      "material": 'l',
      "supplier": 'Email',
      "stack": 'Total',
      "type": 'line',
      "data": [120, 132, 101, 134, 90, 230, 210]
    },
    {
        "material": 'fffffs',
        "supplier": 'ssss',
        "stack": 'Total',
        "type": 'line',
        "data": [120, 132, 101, 134, 90, 20, 11]
      },
    {
      "material": 'Unios',
      "supplier": 'Union Ads',
      "stack": 'Total',
      "type": 'line',
      "data": [220, 182, 191, 234, 290, 330, 310]
    },
    {
      "material": 'Vi Ads',
      "supplier": 'Video Ads',
      "stack": 'Total',
      "type": 'line',
      "data": [150, 232, 201, 154, 190, 330, 410]
    },
    {
      "material": 'Diret',
      "supplier": 'Direct',
      "stack": 'Total',
      "type": 'line',
      "data": [320, 332, 301, 334, 390, 330, 320]
    }
]

const loadingOverlay = document.getElementById('loading-overlay');

$(function() {
	chSession();

	$('.form-input-datetime').datetimepicker({
		format: 'DD/MM/YYYY HH:mm',
		widgetPositioning: {
       		horizontal: "auto",
			vertical: "bottom"
		}
	});
	titleText = 'supplier';
	
	
	periodOfTime = day;
	createChart(titleText, periodOfTime, data);
	loadSupplier();
	loadMaterial()
	$('#graph_y_material').select2();
	$('#graph_y_supplier').select2();
	document.querySelector('.form-group-material').classList.add('hide');

});


function chSession() {
	let url = contextPath + "/api/user/get_permission_menu";
	$.ajax({
		url: url,
		type: 'POST',
		contentType: "application/json",
		data: "graph_data.jsp",
		success: function(data) {
			if (!data.result) {
				window.location = "/auditsupplier/home.jsp";
			}
		}
	});
}
function loadSupplier() {
	let url = contextPath + "/api/supplier/supplier_list";
	$.ajax({
		url: url,
		type: 'GET',
		contentType: "application/json",
		beforeSend: function() {
		    	BlockUi.blockPage();
		    },
		    complete: function() {
		    	BlockUi.unBlockPage();
		    },
		success: function(data) {
			if (data.result && data.message != null && data.message != "") {
				let listStatus = JSON.parse(data.message.trim());
				$(listStatus).each(function(i, v) {
					$('#graph_y_supplier').append(
						'<option value="' + v.supplierId + '" ' + '> ' + 
						v.supplierCompany + ' </option>');
				});
			}
		}
	});
	/*ajaxProcess.submit(
		contextPath + "/api/supplier/supplier_list",
		'GET', 
		null, 
		'', 
		  function() {
		    BlockUi.blockPage();
		  },
		  function() {
		    BlockUi.unBlockPage();
		  },
		(data) => {
			if (data.result && data.message != null && data.message != "") {
				let listStatus = JSON.parse(data.message.trim());
				$(listStatus).each(function(i, v) {
					$('#graph_y_supplier').append(
						'<option value="' + v.supplierId + '" ' + '> ' + 
						v.supplierCompany + ' </option>');
				});
			}
		}
	);*/
}

function loadMaterial() {
	ajaxProcess.submit(
		contextPath + "/api/material/get_material_list",
		'GET', 
		null, 
		'', 
		(data) => {
			if (data.result && data.message != null && data.message != "") {
				let listStatus = JSON.parse(data.message.trim());
				$(listStatus).each(function(i, v) {
					$('#graph_y_material').append(
						'<option value="' + v.materialCode + '" ' + '> ' + 
						v.materialName + ' </option>');
				});
			}
		}
	);
}


function loadDataTable() {
	$("#supplier_table").DataTable({
		data:data,
	    language: {
	        url: "assets/global/plugins/datatables/Thai.json"
	    },
	    columns: [
			{"data": null},
			{"data": "supplier",   name: "supplier"},
		
			
		],
		columnDefs: [
			{
				"className": "dt-left",
				"targets": [0],
				"searchable": false,
	            "orderable": false,
	            "render": function(data, type, full, meta) {
					var btnAction = '';
					count = meta.settings._iDisplayStart + meta.row + 1;
					console.log(count);
	                return meta.settings._iDisplayStart + meta.row + 1;
	                
	            }
			},
			{
				"className": "supplier-select-btn" + count,
				"targets": [1],
				"searchable": false,
	            "orderable": false,

			},
        ],
	    "order": [],
	    "initComplete": function() {
	    	$('.dataTables_filter').remove();
	    }
    
	})
}

function createChart(titleText, periodOfTime, data) {
  const dom = document.getElementById('container');
  const myChart = echarts.init(dom, null, {
    renderer: 'canvas',
    useDirtyRect: false
  });

  // Extract series data from the provided data array
  const seriesData = data.map(item => ({
    name: item.material||item.supplier, // Use "material" property for series name
    type: item.type,
    data: item.data // Use "data" property for data points
  }));


  const options = {
    title: {
      text: titleText
    },
    tooltip: {
      trigger: 'axis'
    },
    legend: {
      data: seriesData.map(series => series.name) // Extract series names
    },
    grid: {
      left: '3%',
      right: '4%',
      bottom: '3%',
      containLabel: true
    },
    toolbox: {
      feature: {
        saveAsImage: {}
      }
    },
    xAxis: {
      type: 'category',
      boundaryGap: false,
      data: periodOfTime
    },
    yAxis: {
      type: 'value'
    },
    series: seriesData
  };
  console.log(seriesData);

  options&&myChart.setOption(options);

}
